{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/gabemeng/Documents/RiseSearchFeature/team-3-now/frontend/components/Education/LightAndInfin.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { ToggleButton } from 'react-native-paper';\nimport { TabBar, Tab, Layout } from '@ui-kitten/components';\nimport Lightning from './Lightning';\nimport Infinity from './Infinity';\n\nvar LightAndInfin = function (_React$Component) {\n  _inherits(LightAndInfin, _React$Component);\n\n  var _super = _createSuper(LightAndInfin);\n\n  function LightAndInfin(props) {\n    var _this;\n\n    _classCallCheck(this, LightAndInfin);\n\n    _this = _super.call(this, props);\n\n    _this.onPress = function (lightStatus, infinStatus, page) {\n      _this.setState({\n        light: lightStatus,\n        infin: infinStatus,\n        isLight: page\n      });\n    };\n\n    _this.state = {\n      light: 'checked',\n      infin: 'unchecked',\n      isLight: true\n    };\n    return _this;\n  }\n\n  _createClass(LightAndInfin, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLight) {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.buttons,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }\n        }, React.createElement(TabBar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }\n        }, React.createElement(Tab, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }\n        }, \"Hi\"))))), React.createElement(View, {\n          style: styles.buttons,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }\n        }, React.createElement(ToggleButton, {\n          icon: \"infinity\",\n          value: \"infin\",\n          size: 30,\n          status: this.state.infin,\n          onPress: function onPress() {\n            return _this2.onPress('unchecked', 'checked', false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }\n        })))), React.createElement(View, {\n          style: styles.pageContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }, React.createElement(Lightning, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }\n        })));\n      } else {\n        return React.createElement(View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.buttonContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.buttons,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }, React.createElement(ToggleButton, {\n          icon: \"flash\",\n          value: \"light\",\n          size: 30,\n          status: this.state.light,\n          onPress: function onPress() {\n            return _this2.onPress('checked', 'unchecked', true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }\n        }))), React.createElement(View, {\n          style: styles.buttons,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, React.createElement(ToggleButton, {\n          icon: \"infinity\",\n          value: \"infin\",\n          size: 30,\n          status: this.state.infin,\n          onPress: function onPress() {\n            return _this2.onPress('unchecked', 'checked', false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        })))), React.createElement(View, {\n          style: styles.pageContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, React.createElement(Infinity, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }\n        })));\n      }\n    }\n  }]);\n\n  return LightAndInfin;\n}(React.Component);\n\nexport { LightAndInfin as default };\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    flexDirection: 'row',\n    paddingTop: '0%'\n  },\n  icon: {\n    alignItems: 'center'\n  },\n  buttons: {\n    backgroundColor: 'white',\n    width: '50%'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  pageContainer: {\n    paddingTop: '20%'\n  }\n});","map":{"version":3,"sources":["/Users/gabemeng/Documents/RiseSearchFeature/team-3-now/frontend/components/Education/LightAndInfin.jsx"],"names":["React","Icon","ToggleButton","TabBar","Tab","Layout","Lightning","Infinity","LightAndInfin","props","onPress","lightStatus","infinStatus","page","setState","light","infin","isLight","state","styles","container","buttonContainer","buttons","icon","pageContainer","Component","StyleSheet","create","flexDirection","paddingTop","alignItems","backgroundColor","width","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { ToggleButton } from 'react-native-paper';\nimport { TabBar, Tab, Layout } from '@ui-kitten/components';\nimport Lightning from './Lightning';\nimport Infinity from './Infinity';\n\nexport default class LightAndInfin extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = { light: 'checked', infin: 'unchecked', isLight: true }; \n    }\n    \n    onPress = (lightStatus, infinStatus, page) => {\n      this.setState({\n        light: lightStatus,\n        infin: infinStatus,\n        isLight: page\n      });\n    }\n\n    render () {\n      if (this.state.isLight) {\n        return (\n          <View style={styles.container}>\n            <View style = {styles.buttonContainer}>\n              <View style={styles.buttons}>\n                <View style={styles.icon}>\n                  <TabBar> \n                    <Tab> \n                      <Text>Hi</Text>\n                    </Tab>\n                  </TabBar>\n                </View>\n              </View>\n              <View style={styles.buttons}>\n                <View style={styles.icon}>\n                <ToggleButton\n                    icon=\"infinity\"\n                    value=\"infin\"\n                    size={30}\n                    status={this.state.infin}\n                    onPress={()=>this.onPress('unchecked', 'checked', false)}\n                  />\n                </View>\n              </View>\n            </View>\n            <View style = {styles.pageContainer}>\n              \n              <Lightning></Lightning> \n            </View>\n          </View>\n        );\n      } else {\n        return (\n          <View style={styles.container}>\n            <View style = {styles.buttonContainer}>\n              <View style={styles.buttons}>\n                <View style={styles.icon}>\n                  <ToggleButton\n                    icon=\"flash\"\n                    value=\"light\"\n                    size={30}\n                    status={this.state.light}\n                    onPress={()=>this.onPress('checked', 'unchecked', true)}\n                  />\n                </View>\n              </View>\n              <View style={styles.buttons}>\n                <View style={styles.icon}>\n                <ToggleButton\n                    icon=\"infinity\"\n                    value=\"infin\"\n                    size={30}\n                    status={this.state.infin}\n                    onPress={()=>this.onPress('unchecked', 'checked', false)}\n                  />\n                </View>\n              </View>\n            </View>\n            <View style = {styles.pageContainer}>\n              <Infinity></Infinity>\n            </View>\n          </View>\n        );\n      }\n   }\n}\n\nconst styles = StyleSheet.create({\n    buttonContainer: {\n      flexDirection: 'row',\n      paddingTop: '0%',\n    },\n    icon: {\n      alignItems: 'center',  \n    },\n    buttons: {\n      backgroundColor: 'white',\n      width: '50%',\n    },\n    container: {\n      flex: 1,\n      alignItems: 'center',  \n    },\n    pageContainer: {\n      paddingTop: '20%',\n    }\n  });"]},"metadata":{},"sourceType":"module"}